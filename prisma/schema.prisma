generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                 String  @id @default(cuid()) @map("_id")
    userId             String  @db.ObjectId
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid()) @map("_id")
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    Account       Account[]
    Session       Session[]
    listIDs       String[]  @db.ObjectId
    lists         List[]    @relation(fields: [listIDs], references: [id])
}

model List {
    id        String     @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    listItems ListItem[]
    userIDs   String[]   @db.ObjectId
    users     User[]     @relation(fields: [userIDs], references: [id])
}

model ListItem {
    id     String  @id @default(cuid()) @map("_id")
    text   String
    emoji  String?
    listId String  @db.ObjectId
    list   List    @relation(fields: [listId], references: [id])
}
